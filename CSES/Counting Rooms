#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

#define ff first
#define ss second
#define ll long long
#define double long double
#define pb push_back
#define pll pair<ll, ll>
#define pii pair<int, int>

#define sz(x) (int)x.size()
#define range(x) x.begin(),x.end()
#define rep(i,k,n) for(int i=k;i<n;i++)
#define show(x) cout<<#x<<" :: "<<x<<'\n';
#define iosbase ios_base::sync_with_stdio(false); cin.tie(NULL);
#define show2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<'\n';
#define show3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<'\n';
#define oset tree<int , null_type, less<int> , rb_tree_tag, tree_order_statistics_node_update>

using namespace std;
using namespace __gnu_pbds;

const ll inf = 1e18;
const ll N = 2000005;
const ll mm = 1e9 + 7;

int n, m;
vector<vector<char>> a;
vector<vector<int>> vis;

const int dx[4] = {-1, 0, 1, 0};
const int dy[4] = {0, 1, 0, -1};

bool in(int x, int y)
{
    if(x >= n) return false;
    if(y >= m) return false;
    if(x < 0) return false;
    if(y < 0) return false;
    return true;
}
void dfs(int x, int y)
{
    vis[x][y] = 1;
    for(int i = 0; i < 4; i++)
    {
        int xx = x + dx[i];
        int yy = y + dy[i];
        if(in(xx, yy) && !vis[xx][yy] && a[xx][yy] == '.')
        {
            dfs(xx, yy);
        }
    }
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    iosbase;
    
    cin>>n>>m;

    a = vector<vector<char>> (n, vector<char> (m));
    vis = vector<vector<int>> (n, vector<int> (m, 0));

    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < m; j++)
        {
            cin>>a[i][j];
        }
    }

    int cnt = 0;
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < m; j++)
        {
            if(!vis[i][j] && a[i][j] == '.')
            {
                dfs(i, j);
                cnt++;
            }
        }
    }
    cout<<cnt<<'\n';
    return 0;
}
